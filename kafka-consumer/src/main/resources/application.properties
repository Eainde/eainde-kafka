#============================================================================================================================
#                                   GENERAL SETTINGS
#============================================================================================================================
    spring.application.name= eainde-kafka-consumer
    server.port= 8443

#============================================================================================================================
#                                   LOGGING
#============================================================================================================================
    logging.level.root= INFO
    logging.pattern.level= %5p [${spring.zipkin.service.name:${spring.application.name:-}},%X{traceId:-},%X{spanId:-}]
    logging.level.io.confluent= ERROR
    logging.level.org.apache.kafka= ERROR
    logging.level.zookeeper= ERROR
    logging.level.kafka= ERROR

#============================================================================================================================
#                                   SPRING BOOT ACTUATOR ENDPOINTS
#============================================================================================================================
    management.endpoints.web.base-path=/
    management.endpoint.health.show-details= always
    management.info.build.enabled= true
    management.info.env.enabled= true
    management.info.git.enabled= true
    management.info.git.mode= simple
#============================================================================================================================
#                                   Kafka Properties
#============================================================================================================================
    spring.cloud.stream.kafka.binder.autoCreateTopics= true
    spring.cloud.stream.default.consumer.concurrency= 3
    spring.cloud.stream.default.consumer.headerMode= headers
    spring.cloud.stream.default.consumer.useNativeDecoding= true
    spring.cloud.stream.default.group= Eainde_${spring.application.name}

    spring.cloud.function.definition= listen
    spring.cloud.stream.bindings.listen-in-0.destination= eainde_order
    spring.cloud.stream.bindings.listen-in-0.consumer.ack-mode= manual
    spring.cloud.stream.bindings.listen-in-0.consumer.configuration.max.poll.interval.ms= 600000

    spring.cloud.stream.schema.avro.schema.locations= classpath:avro/OrderRecord.avsc
    spring.cloud.stream.kafka.binder.consumer-properties.isolation.level= read_committed

    spring.kafka.consumer.key-deserializer= org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    spring.kafka.properties.spring.deserializer.key.delegate.class= io.confluent.kafka.serializers.KafkaAvroDeserializer
    spring.kafka.properties.spring.deserializer.value.delegate.class= io.confluent.kafka.serializers.KafkaAvroDeserializer
    spring.kafka.properties.specific.avro.reader= true

    spring.kafka.properties.security.protocol= plaintext
    spring.cloud.stream.kafka.binder.broker= localhost:9092
    spring.cloud.stream.schemaRegistryClient.endpoint= http://localhost:8081
    spring.kafka.properties.schema.registry.url= http://localhost:8081

